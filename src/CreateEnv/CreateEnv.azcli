################################################
# Step 1:   Logon to Azure 
#           Get and set Azure subscription 
################################################
# Login to subscription
az login

# Retrieve default subscription id
$subscriptionId = (
    (
        az account list `
            --query "[?isDefault]" 
    ) | ConvertFrom-Json
).id

# Set Subscription
az account set --subscription $subscriptionId

# Get signed in user
$signedInUserId = (
    az ad signed-in-user show `
        --query id `
        --output tsv
)

################################################
# Step 2:   Create unifier
################################################
$random = Get-Random -Minimum 1 -Maximum 999

################################################
# Step 3:   Create Resource Group
################################################
$resourceGroup = "FTA.RBACSample"
$location = "WestEurope"

az group create `
    --location $location `
    --resource-group $resourceGroup

################################################
# Step 4:   Create IoT Hub 
################################################
$hubName = "IoTHubRBAC$random"
$hubPartitionCount = "2"
$hubSku = "S1"

az iot hub create `
    --name $hubName `
    --resource-group $resourceGroup `
    --location $location `
    --partition-count $hubPartitionCount `
    --sku $hubSKU


################################################
# Step 5:   Create IoT Hub Device
################################################
$hubDeviceId = "device01"

az iot hub device-identity create `
    --device-id $hubDeviceId `
    --hub-name $hubName


################################################
# Step 6:   Get IoT Hub Url & Id
################################################
$hubId = ( `
    az iot hub show `
        --name $hubName `
        --resource-group $resourceGroup `
        --query id `
        --output tsv
)

$hubUrl = (az iot hub show `
    --name $hubName `
    --query properties.hostName `
    --output tsv
)
Write-Output "######## IoT Hub Instance Url: $hubUrl ########"

################################################
# Step 7:   IoT Hub role assignments
################################################
$hubRole = "Owner"

az role assignment create `
    --role $hubRole `
    --assignee $signedInUserId `
    --scope $hubId 

################################################
# Step 8:   Create Storage Account & Container
################################################
$storageName = "storagerbac$random"
$storageContainerName = "rbacdemo"

az storage account create `
    --name $storageName `
    --resource-group $resourceGroup 

$storageConnectionString = ( `
    az storage account show-connection-string `
        --name $storageName `
        --resource-group $resourceGroup `
        --query connectionString `
        --output tsv
)

az storage container create `
    --name $storageContainerName `
    --account-name $storageName `
    --connection-string $storageConnectionString

az storage container show `
    --name $storageContainerName `
    --account-name $storageName `
    --connection-string $storageConnectionString
    
$storageAccountId = ( `
    az storage account show `
        --name $storageName `
        --resource-group $resourceGroup `
        --query id `
        --output tsv `
)

################################################
# Step 9:   Create storage container role assignment
################################################
$containerRole = "Owner"

az role assignment create `
    --role $containerRole `
    --assignee $signedInUserId `
    --scope $storageAccountId 


################################################
# HOUSE KEEPING
################################################

# Delete role assignments
$storageRole = "Storage Blob Data Contributor"
az role assignment delete `
    --assignee $signedInUserId `
    --role $storageRole `
    --scope $storageAccountId

# Delete IoT Hub role assignments
$hubRole = "Owner"

az role assignment delete `
    --role $hubRole `
    --assignee $signedInUserId `
    --scope $hubId 
